/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['split_batches']). Please pass an `accelerate.DataLoaderConfiguration` instead: 
dataloader_config = DataLoaderConfiguration(split_batches=False)
  warnings.warn(
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
Instantiating the dataset and dataloader...
Checking the dataset and dataloader...
person_images: torch.Size([30, 3, 128, 128])
ca_images: torch.Size([30, 3, 128, 128])
garment_images: torch.Size([30, 3, 128, 128])
person_poses: torch.Size([30, 25, 2])
Instantiating U-Nets...
((128, 128),)
Instantiating the trainer...
Distributed environment: NO
Num processes: 1
Process index: 0
Local process index: 0
Device: cuda

Mixed precision type: no

Loading model checkpoint from /scratch/network/dg9272/cos485/checkpoints/checks4/checkpoint.21600.pt
Loading optimizer and scaler...
checkpoint loaded from /scratch/network/dg9272/cos485/checkpoints/checks4/checkpoint.21600.pt
Starting training loop...
wrapping unet 1 and preparing with accelerator
Traceback (most recent call last):
  File "/home/dg9272/tryondiffusion2.0/trainer.py", line 164, in <module>
    main()
  File "/home/dg9272/tryondiffusion2.0/trainer.py", line 135, in main
    trainer.train_step(unet_number=TRAIN_UNET_NUMBER)
  File "/home/dg9272/tryondiffusion2.0/tryondiffusion/tryon_imagen_trainer.py", line 486, in train_step
    loss = self.step_with_dl_iter(self.train_dl_iter, **kwargs)
  File "/home/dg9272/tryondiffusion2.0/tryondiffusion/tryon_imagen_trainer.py", line 505, in step_with_dl_iter
    loss = self.forward(**{**kwargs, **sample})
  File "/home/dg9272/tryondiffusion2.0/tryondiffusion/common/torch_helpers.py", line 63, in inner
    out = fn(model, *args, **kwargs)
  File "/home/dg9272/tryondiffusion2.0/tryondiffusion/tryon_imagen_trainer.py", line 813, in forward
    loss = self.imagen(*args, unet=self.unet_being_trained, unet_number=unet_number, **kwargs)
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/dg9272/tryondiffusion2.0/tryondiffusionlite.py", line 1415, in forward
    return self.p_losses(
  File "/home/dg9272/tryondiffusion2.0/tryondiffusionlite.py", line 1310, in p_losses
    pred = unet.forward(x_noisy, noise_cond, **unet_kwargs)
  File "/home/dg9272/tryondiffusion2.0/tryondiffusionlite.py", line 648, in forward
    noisy_images = person_up_block(
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/dg9272/tryondiffusion2.0/tryondiffusion/modules/tryon.py", line 213, in forward
    x = resnet_block(x, time_emb=time_emb)
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/dg9272/tryondiffusion2.0/tryondiffusion/modules/conditional.py", line 72, in forward
    h = self.ada_gn2(h, time_emb=time_emb)
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/dg9272/tryondiffusion2.0/tryondiffusion/modules/conditional.py", line 33, in forward
    x = self.groupnorm(x)
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/modules/normalization.py", line 287, in forward
    return F.group_norm(
  File "/home/dg9272/.conda/envs/cos485/lib/python3.10/site-packages/torch/nn/functional.py", line 2561, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 120.00 MiB. GPU 0 has a total capacity of 79.33 GiB of which 91.69 MiB is free. Including non-PyTorch memory, this process has 79.23 GiB memory in use. Of the allocated memory 77.39 GiB is allocated by PyTorch, and 1.34 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
